# ################################
# SummaryMixing Â© 2023 by Samsung Electronics is licensed under CC BY-NC 4.0.

# This is configurations of SummaryMixing wav2vec 2.0 downstream ASV on VoxCeleb

# Usage: Install SpeechBrain MP3S
# Create a folder benchmarks/MP3S/VoxCeleb1/ecapa_tdnn
# Copy this file under benchmarks/MP3S/VoxCeleb1/ecapa_tdnn/hparams
# SummaryMixing: https://arxiv.org/abs/2307.07421
# SummaryMixing SSL: https://arxiv.org/pdf/2407.13377

# Authors
#  * Titouan Parcollet 2023, 2024
#  * Shucong Zhang 2023, 2024
#  * Rogier van Dalen 2023, 2024
#  * Sourav Bhattacharya 2023, 2024
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/VoxCeleb1/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/Voxceleb
train_annotation: !ref <output_folder>/train.csv
valid_annotation: !ref <output_folder>/dev.csv
num_layers_ssl: 13
pretrained_path: !PLACEHOLDER # e,g./path/to/pre-trained_SummaryMixing_w2v2

verification_file: !PLACEHOLDER #path/to/veri_test2.txt

skip_prep: False
ckpt_interval_minutes: 15 # save checkpoint every N min
pretrain: True
# Training parameters
number_of_epochs: 15
batch_size: 8
lr: 0.001
lr_final: 0.0001
mask_length: 10
mask_prob: 0.65
lr_weights: 0.01
sample_rate: 16000
shuffle: True
random_chunk: True
sentence_len: 3

# Feature parameters

encoder_dim: 768

# Number of speakers
out_n_neurons: 1211  #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

freeze_wav2vec: True
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>
    drop_last: True

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: !ref <encoder_dim>
    channels: [512, 512, 512, 512, 1536]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    groups: [1, 1, 1, 1, 1]
    attention_channels: 64
    lin_neurons: 512

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
    input_size: 512
    out_neurons: !ref <out_n_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


encoder: !new:speechbrain.lobes.models.transformer.Conformer.ConformerEncoder
  d_model: 768
  num_layers: 12
  nhead: 8
  d_ffn: 3072
  dropout: 0.1
  layerdrop_prob: 0.0
  attention_type: SummaryMixing  
  local_proj_hid_dim: [768]
  local_proj_out_dim: 768
  summary_hid_dim: [768]
  mode: SummaryMixing
  output_hidden_states: True

latentextractor_kernels: [3, 3]
latentextractor_strides: [2, 1]
extractor_dim: 512
embedding_dim: 768

CNN: !new:speechbrain.lobes.models.wav2vec.W2VLatentExtractor
  kernel_sizes: !ref <latentextractor_kernels>
  strides: !ref <latentextractor_strides>
  out_channels: [512, 512]
  input_dim: 80

weighted_ssl_model: !new:speechbrain.lobes.models.wav2vec.WeightedSSLModel
  pretrained_path: !ref <pretrained_path>
  num_layers: 13
  latent_encoder: !ref <encoder>
  CNN: !ref <CNN>
  in_dim: 512
  embedding_dim: 768
  dropout_encoder_input: 0.1
  output_hidden_states: True


modules:
    weighted_ssl_model: !ref <weighted_ssl_model>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>

model: !new:torch.nn.ModuleList
    - [!ref <embedding_model>, !ref <classifier>]


# Cost + optimization
compute_error: !name:speechbrain.nnet.losses.classification_error

compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
    loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
        margin: 0.2
        scale: 30


model_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
    initial_value: !ref <lr>
    final_value: !ref <lr_final>
    epoch_count: !ref <number_of_epochs>

weights_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_weights>

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_weights>
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0

# Used to load the SB checkpoint of w2v2
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>


# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        embedding_model: !ref <embedding_model>
        scheduler_wav2vec: !ref <lr_annealing_weights>
        ssl_model: !ref <weighted_ssl_model>
        classifier: !ref <classifier>
        counter: !ref <epoch_counter>

train_data: !ref <save_folder>/train.csv
enrol_data: !ref <save_folder>/enrol.csv
test_data: !ref <save_folder>/test.csv

verif_batch_size: 2
n_train_snts: 300000 # used for normalization stats


# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>

enrol_dataloader_opts:
    batch_size: !ref <batch_size>

test_dataloader_opts:
    batch_size: !ref <batch_size>


mean_var_norm_emb: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    std_norm: False
